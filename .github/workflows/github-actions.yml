name: dotnet package
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK 5
        uses: actions/setup-dotnet@v1.8.0
        with:
          dotnet-version: 5.0.x
      - name: Setup .NET Core SDK 6
        uses: actions/setup-dotnet@v1.8.0
        with:
          dotnet-version: 6.0.x
      - name: Install dependencies
        run: dotnet restore src/
      - name: Test with dotnet
        run: dotnet test --no-restore --logger trx --results-directory "TestResults" src/ /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput="../../TestResults/"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v2
        with:
          name: dotnet-results
          path: TestResults
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
      - name: Upload dotnet test coverage
        run: bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }} -f TestResults/coverage.opencover.xml
      - name: Build with dotnet Targets
        run: dotnet build --no-restore --configuration Release src/DevOps.Targets/DevOps.Targets.csproj
      - name: Create the Terminal package with symbols
        run: dotnet pack --no-restore --configuration Release src/DevOps.Terminal/DevOps.Terminal.csproj --include-symbols
      - name: Create the Targets package with symbols
        run: dotnet pack --no-restore --configuration Release src/DevOps.Targets/DevOps.Targets.csproj --include-symbols
      - name: Clear nupkg packages for another build with README
        run: rm src/*/bin/Release/*.nupkg
      - name: Create the Terminal package with README
        run: dotnet pack --no-restore --configuration Release src/DevOps.Terminal/DevOps.Terminal.csproj -p:PACK_README=true
      - name: Create the Targets package with README
        run: dotnet pack --no-restore --configuration Release src/DevOps.Targets/DevOps.Targets.csproj -p:PACK_README=true
      - name: Publish the Terminal package to nuget.org
        run: dotnet nuget push src/DevOps.Terminal/bin/Release/*.nupkg --skip-duplicate -k ${{ secrets.NUGET_TOKEN }} -s https://api.nuget.org/v3/index.json
      - name: Publish the Targets package to nuget.org
        run: dotnet nuget push src/DevOps.Targets/bin/Release/*.nupkg --skip-duplicate -k ${{ secrets.NUGET_TOKEN }} -s https://api.nuget.org/v3/index.json
